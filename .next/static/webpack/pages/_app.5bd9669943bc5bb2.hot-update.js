"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./pages/user/userSlice.ts":
/*!*********************************!*\
  !*** ./pages/user/userSlice.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useGetAllUserMutation\": function() { return /* binding */ useGetAllUserMutation; },\n/* harmony export */   \"useSigninUserMutation\": function() { return /* binding */ useSigninUserMutation; },\n/* harmony export */   \"useSignupUserMutation\": function() { return /* binding */ useSignupUserMutation; },\n/* harmony export */   \"userApi\": function() { return /* binding */ userApi; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"./node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.esm.js\");\n// import axios from 'axios'\n// import { createSlice, createAsyncThunk,PayloadAction } from '@reduxjs/toolkit'\n// type User ={\n//   id:number\n//   name:string\n//   date_of_birth:string\n//   email:string\n// }\n// type InitialState ={\n//   loading:boolean\n//   users: User[]\n//   error:string\n// }\n// const initialState:InitialState = {\n//   loading: false,\n//   users: [],\n//   error: ''\n// }\n// //CreateAsyncThunk will automatacally Generates pending ,fulfilled and rejected action types\n// // CreateAsyncThunk only avalible in redux toolkit\n// export const fetchUsers = createAsyncThunk('user/fetchUsers', () => {\n//   return axios\n//     // .get('https://jsonplaceholder.typicode.com/users')\n//     .get('http://127.0.0.1:8000/api/user/getallusers/')\n//     // .then(response => response.data.map((user) => user.id)) //for only fetching the id\n//     .then(response => response.data) //for all data\n// })\n// // Reducers\n// // Note:-\n// // CreateSlice automatically generate an action with the same name\n// // as the reducers function we have written\n// const userSlice = createSlice({\n//   name: 'user',\n//   initialState,\n//   reducers:{},\n//   extraReducers: builder => {\n//     builder.addCase(fetchUsers.pending, state => {\n//       state.loading = true\n//     })\n//     builder.addCase(fetchUsers.fulfilled, (state, action:PayloadAction<User[]>) => {\n//       state.loading = false\n//       state.users = action.payload\n//       state.error = ''\n//     })\n//     builder.addCase(fetchUsers.rejected, (state, action) => {\n//       state.loading = false\n//       state.users = []\n//       state.error = action.error.message || 'Something went wrong'\n//     })\n//   }\n// })\n// export default userSlice.reducer\n\n// It is used to define our endpoints and allow to create the API slice\nconst userApi = (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.createApi)({\n    // The unique key that defines where the Redux store will store our cache.\n    reducerPath: \"userApi\",\n    // The base query to request data.\n    // RTK Query ships with fetchBaseQuery, which is a lightweight fetch wrapper that automatically handles request headers and response parsing in a manner similar to common libraries like axios.\n    baseQuery: (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.fetchBaseQuery)({\n        baseUrl: \"http://127.0.0.1:8000/api/user/\"\n    }),\n    // The set of operations that we want to perform against the server.\n    endpoints: (builder)=>({\n            // getAllUser: builder.query<User[], void>({\n            //  query: () => ({\n            //   url: 'getallusers/',\n            //   method: 'GET'\n            //  })\n            // }),\n            getAllUser: builder.mutation({\n                query: (body)=>({\n                        url: \"getallusers/\",\n                        method: \"GET\"\n                    })\n            }),\n            signinUser: builder.mutation({\n                query: (body)=>{\n                    return {\n                        url: \"login/\",\n                        method: \"post\",\n                        body\n                    };\n                }\n            }),\n            // user signup\n            signupUser: builder.mutation({\n                query: (body)=>{\n                    // query: (body: { name: string; email: string; password: string; password2: string;  tc:string;   Dfirst:number; Cfirst:number; date_of_birth:string; }) => {\n                    // query: (body:  User ) => {\n                    return {\n                        url: \"register/\",\n                        method: \"post\",\n                        body\n                    };\n                }\n            })\n        })\n});\n// Export hooks for usage in functional components, which are auto-generated based on the defined endpoints\nconst { useGetAllUserMutation , useSignupUserMutation , useSigninUserMutation  } = userApi;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/user/userSlice.ts\n"));

/***/ })

});