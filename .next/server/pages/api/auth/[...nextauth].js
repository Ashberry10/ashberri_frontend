"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].ts":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authOptions\": () => (/* binding */ authOptions),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst authOptions = {\n    secret: process.env.AUTH_SECRET,\n    providers: [\n        // ..add more prodiver\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0___default()({\n            // The Username to display on the sign in form (e.g. \"Sign in with...\")\n            name: \"Credentials\",\n            // `credentials` is used to generate a form on the sign in page.\n            // You can specify which fields should be submitted, by adding keys to the `credentials` object.\n            // e.g. domain, userUsername, password, 2FA token, etc.\n            // You can pass any HTML attribute to the <input> tag through the object.\n            credentials: {\n                // Username: { label: \"Username\", type: \"text\", placeholder: \"jsmith\" },\n                email: {\n                    label: \"email\",\n                    type: \"email\",\n                    placeholder: \"jsmith@gmail.com\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials, req) {\n                // Add logic here to look up the user from the credentials supplied\n                //   const user = { id: \"1\", Username: \"J Smith\", email: \"jsmith@example.com\" }\n                //   if (user) {\n                //     // Any object returned will be saved in `user` property of the JWT\n                //     return user\n                //   } else {\n                //     // If you return null then an error will be displayed advising the user to check their details.\n                //     return null\n                //     // You can also Reject this callback with an Error thus the user will be sent to the error page with the error message as a query parameter\n                //   }\n                const { email , password  } = credentials;\n                const res = await fetch(\"http://127.0.0.1:8000/api/user/login/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        // Username,\n                        email,\n                        password\n                    })\n                });\n                const user = await res.json();\n                // console.log({user});\n                if (res.ok && user) {\n                    return user;\n                } else {\n                    return null;\n                }\n            }\n        })\n    ],\n    // session:{\n    //     strategy:\"jwt\"\n    // },\n    callbacks: {\n        async jwt ({ token , user  }) {\n            return {\n                ...token,\n                ...user\n            };\n        },\n        async session ({ session , token , user  }) {\n            session.user = token;\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/auth/login\",\n        signOut: \"/auth/login\"\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_1___default()(authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFrRTtBQUVoQjtBQUUzQyxNQUFNRSxjQUE4QjtJQUN4Q0MsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0lBQzlCQyxXQUFVO1FBRU4sc0JBQXNCO1FBQ3RCUCxzRUFBbUJBLENBQUM7WUFDbEIsdUVBQXVFO1lBQ3ZFUSxNQUFNO1lBQ04sZ0VBQWdFO1lBRTlELGdHQUFnRztZQUNoRyx1REFBdUQ7WUFDdkQseUVBQXlFO1lBQ3pFQyxhQUFhO2dCQUNYLHdFQUF3RTtnQkFDeEVDLE9BQU87b0JBQUVDLE9BQU87b0JBQVNDLE1BQU07b0JBQVNDLGFBQWE7Z0JBQW1CO2dCQUV4RUMsVUFBVTtvQkFBRUgsT0FBTztvQkFBWUMsTUFBTTtnQkFBVztZQUNsRDtZQUNBLE1BQU1HLFdBQVVOLFdBQVcsRUFBRU8sR0FBRyxFQUFFO2dCQUVoQyxtRUFBbUU7Z0JBQ3JFLCtFQUErRTtnQkFFL0UsZ0JBQWdCO2dCQUNoQix5RUFBeUU7Z0JBQ3pFLGtCQUFrQjtnQkFDbEIsYUFBYTtnQkFDYixzR0FBc0c7Z0JBQ3RHLGtCQUFrQjtnQkFFbEIsa0pBQWtKO2dCQUNsSixNQUFNO2dCQUVELE1BQU0sRUFBQ04sTUFBSyxFQUFDSSxTQUFRLEVBQUUsR0FBR0w7Z0JBQzFCLE1BQU1RLE1BQU0sTUFBTUMsTUFBTSx5Q0FBd0M7b0JBQy9EQyxRQUFPO29CQUNQQyxTQUFRO3dCQUNOLGdCQUFlO29CQUVuQjtvQkFFQUMsTUFBS0MsS0FBS0MsU0FBUyxDQUFDO3dCQUNsQixZQUFZO3dCQUNaYjt3QkFDQUk7b0JBQ0Y7Z0JBQ0o7Z0JBR0EsTUFBTVUsT0FBTyxNQUFNUCxJQUFJUSxJQUFJO2dCQUUzQix1QkFBdUI7Z0JBRXZCLElBQUlSLElBQUlTLEVBQUUsSUFBSUYsTUFBTTtvQkFDbEIsT0FBT0E7Z0JBQ1QsT0FBTTtvQkFFTixPQUFPLElBQUk7Z0JBQ1gsQ0FBQztZQUNIO1FBQ0Y7S0FDRDtJQUtDLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsS0FBSztJQUVMRyxXQUFXO1FBQ1QsTUFBTUMsS0FBSSxFQUFFQyxNQUFLLEVBQUVMLEtBQUksRUFBRSxFQUFFO1lBQ3pCLE9BQU87Z0JBQUUsR0FBR0ssS0FBSztnQkFBRSxHQUFHTCxJQUFJO1lBQUM7UUFDN0I7UUFDQSxNQUFNTSxTQUFRLEVBQUVBLFFBQU8sRUFBRUQsTUFBSyxFQUFFTCxLQUFJLEVBQUUsRUFBRTtZQUN0Q00sUUFBUU4sSUFBSSxHQUFHSztZQUNmLE9BQU9DO1FBQ1Q7SUFFRjtJQUNBQyxPQUFNO1FBQ0pDLFFBQU87UUFDUEMsU0FBUTtJQUNaO0FBQ0EsRUFBRTtBQUlSLGlFQUFlaEMsZ0RBQVFBLENBQUNDLFlBQVlBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLnRzPzJlOGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIjtcclxuaW1wb3J0IHsgc2lnbk91dCB9IGZyb20gJ25leHQtYXV0aC9yZWFjdCc7XHJcbmltcG9ydCBOZXh0QXV0aCx7TmV4dEF1dGhPcHRpb25zfSBmcm9tIFwibmV4dC1hdXRoXCJcclxuXHJcbmV4cG9ydCBjb25zdCBhdXRoT3B0aW9uczpOZXh0QXV0aE9wdGlvbnMgPSB7XHJcbiAgIHNlY3JldDogcHJvY2Vzcy5lbnYuQVVUSF9TRUNSRVQsXHJcbiAgICBwcm92aWRlcnM6W1xyXG4gICAgICBcclxuICAgICAgICAvLyAuLmFkZCBtb3JlIHByb2RpdmVyXHJcbiAgICAgICAgQ3JlZGVudGlhbHNQcm92aWRlcih7XHJcbiAgICAgICAgICAvLyBUaGUgVXNlcm5hbWUgdG8gZGlzcGxheSBvbiB0aGUgc2lnbiBpbiBmb3JtIChlLmcuIFwiU2lnbiBpbiB3aXRoLi4uXCIpXHJcbiAgICAgICAgICBuYW1lOiBcIkNyZWRlbnRpYWxzXCIsXHJcbiAgICAgICAgICAvLyBgY3JlZGVudGlhbHNgIGlzIHVzZWQgdG8gZ2VuZXJhdGUgYSBmb3JtIG9uIHRoZSBzaWduIGluIHBhZ2UuXHJcbiAgICAgICBcclxuICAgICAgICAgICAgLy8gWW91IGNhbiBzcGVjaWZ5IHdoaWNoIGZpZWxkcyBzaG91bGQgYmUgc3VibWl0dGVkLCBieSBhZGRpbmcga2V5cyB0byB0aGUgYGNyZWRlbnRpYWxzYCBvYmplY3QuXHJcbiAgICAgICAgICAgIC8vIGUuZy4gZG9tYWluLCB1c2VyVXNlcm5hbWUsIHBhc3N3b3JkLCAyRkEgdG9rZW4sIGV0Yy5cclxuICAgICAgICAgICAgLy8gWW91IGNhbiBwYXNzIGFueSBIVE1MIGF0dHJpYnV0ZSB0byB0aGUgPGlucHV0PiB0YWcgdGhyb3VnaCB0aGUgb2JqZWN0LlxyXG4gICAgICAgICAgICBjcmVkZW50aWFsczoge1xyXG4gICAgICAgICAgICAgIC8vIFVzZXJuYW1lOiB7IGxhYmVsOiBcIlVzZXJuYW1lXCIsIHR5cGU6IFwidGV4dFwiLCBwbGFjZWhvbGRlcjogXCJqc21pdGhcIiB9LFxyXG4gICAgICAgICAgICAgIGVtYWlsOiB7IGxhYmVsOiBcImVtYWlsXCIsIHR5cGU6IFwiZW1haWxcIiwgcGxhY2Vob2xkZXI6IFwianNtaXRoQGdtYWlsLmNvbVwiIH0sXHJcblxyXG4gICAgICAgICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIlBhc3N3b3JkXCIsIHR5cGU6IFwicGFzc3dvcmRcIiB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscywgcmVxKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgLy8gQWRkIGxvZ2ljIGhlcmUgdG8gbG9vayB1cCB0aGUgdXNlciBmcm9tIHRoZSBjcmVkZW50aWFscyBzdXBwbGllZFxyXG4gICAgICAgICAgICAvLyAgIGNvbnN0IHVzZXIgPSB7IGlkOiBcIjFcIiwgVXNlcm5hbWU6IFwiSiBTbWl0aFwiLCBlbWFpbDogXCJqc21pdGhAZXhhbXBsZS5jb21cIiB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIC8vICAgaWYgKHVzZXIpIHtcclxuICAgICAgICAgICAgLy8gICAgIC8vIEFueSBvYmplY3QgcmV0dXJuZWQgd2lsbCBiZSBzYXZlZCBpbiBgdXNlcmAgcHJvcGVydHkgb2YgdGhlIEpXVFxyXG4gICAgICAgICAgICAvLyAgICAgcmV0dXJuIHVzZXJcclxuICAgICAgICAgICAgLy8gICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyAgICAgLy8gSWYgeW91IHJldHVybiBudWxsIHRoZW4gYW4gZXJyb3Igd2lsbCBiZSBkaXNwbGF5ZWQgYWR2aXNpbmcgdGhlIHVzZXIgdG8gY2hlY2sgdGhlaXIgZGV0YWlscy5cclxuICAgICAgICAgICAgLy8gICAgIHJldHVybiBudWxsXHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIC8vICAgICAvLyBZb3UgY2FuIGFsc28gUmVqZWN0IHRoaXMgY2FsbGJhY2sgd2l0aCBhbiBFcnJvciB0aHVzIHRoZSB1c2VyIHdpbGwgYmUgc2VudCB0byB0aGUgZXJyb3IgcGFnZSB3aXRoIHRoZSBlcnJvciBtZXNzYWdlIGFzIGEgcXVlcnkgcGFyYW1ldGVyXHJcbiAgICAgICAgICAgIC8vICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICBjb25zdCB7ZW1haWwscGFzc3dvcmQgfSA9IGNyZWRlbnRpYWxzIGFzIGFueTtcclxuICAgICAgICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS91c2VyL2xvZ2luLycse1xyXG4gICAgICAgICAgICAgICAgICBtZXRob2Q6XCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6e1xyXG4gICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJcclxuXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGJvZHk6SlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgICAvLyBVc2VybmFtZSxcclxuICAgICAgICAgICAgICAgICAgZW1haWwsXHJcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLFxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHt1c2VyfSk7XHJcbiAgICBcclxuICAgICAgICAgICAgaWYgKHJlcy5vayAmJiB1c2VyKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHVzZXI7XHJcbiAgICAgICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0pLFxyXG4gICAgICBdLFxyXG5cclxuXHJcblxyXG5cclxuICAgICAgICAvLyBzZXNzaW9uOntcclxuICAgICAgICAvLyAgICAgc3RyYXRlZ3k6XCJqd3RcIlxyXG4gICAgICAgIC8vIH0sXHJcbiAgIFxyXG4gICAgICAgIGNhbGxiYWNrczoge1xyXG4gICAgICAgICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xyXG4gICAgICAgICAgICByZXR1cm4geyAuLi50b2tlbiwgLi4udXNlciB9O1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB0b2tlbiwgdXNlciB9KSB7XHJcbiAgICAgICAgICAgIHNlc3Npb24udXNlciA9IHRva2VuIGFzIGFueTtcclxuICAgICAgICAgICAgcmV0dXJuIHNlc3Npb247XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYWdlczp7XHJcbiAgICAgICAgICBzaWduSW46XCIvYXV0aC9sb2dpblwiLFxyXG4gICAgICAgICAgc2lnbk91dDpcIi9hdXRoL2xvZ2luXCJcclxuICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBOZXh0QXV0aChhdXRoT3B0aW9ucylcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuLy8gaW1wb3J0IE5leHRBdXRoIGZyb20gXCJuZXh0LWF1dGhcIjtcclxuLy8gaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIjtcclxuLy8gZXhwb3J0IGRlZmF1bHQgTmV4dEF1dGgoe1xyXG4vLyAgIHByb3ZpZGVyczogW1xyXG4vLyAgICAgQ3JlZGVudGlhbHNQcm92aWRlcih7XHJcbi8vICAgICAgIC8vIFRoZSBuYW1lIHRvIGRpc3BsYXkgb24gdGhlIHNpZ24gaW4gZm9ybSAoZS5nLiBcIlNpZ24gaW4gd2l0aC4uLlwiKVxyXG5cclxuLy8gICAgICAgbmFtZTogXCJDcmVkZW50aWFsc1wiLFxyXG4vLyAgICAgICAvLyBgY3JlZGVudGlhbHNgIGlzIHVzZWQgdG8gZ2VuZXJhdGUgYSBmb3JtIG9uIHRoZSBzaWduIGluIHBhZ2UuXHJcbi8vICAgICAgIC8vIFlvdSBjYW4gc3BlY2lmeSB3aGljaCBmaWVsZHMgc2hvdWxkIGJlIHN1Ym1pdHRlZCwgYnkgYWRkaW5nIGtleXMgdG8gdGhlIGBjcmVkZW50aWFsc2Agb2JqZWN0LlxyXG4vLyAgICAgICAvLyBlLmcuIGRvbWFpbiwgdXNlcm5hbWUsIHBhc3N3b3JkLCAyRkEgdG9rZW4sIGV0Yy5cclxuLy8gICAgICAgLy8gWW91IGNhbiBwYXNzIGFueSBIVE1MIGF0dHJpYnV0ZSB0byB0aGUgPGlucHV0PiB0YWcgdGhyb3VnaCB0aGUgb2JqZWN0LlxyXG4vLyAgICAgICBjcmVkZW50aWFsczoge1xyXG4vLyAgICAgICAgIHVzZXJuYW1lOiB7IGxhYmVsOiBcIlVzZXJuYW1lXCIsIHR5cGU6IFwidGV4dFwiLCBwbGFjZWhvbGRlcjogXCJqc21pdGhcIiB9LFxyXG4vLyAgICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIlBhc3N3b3JkXCIsIHR5cGU6IFwicGFzc3dvcmRcIiB9LFxyXG4vLyAgICAgICB9LFxyXG4vLyAgICAgICBhc3luYyBhdXRob3JpemUoY3JlZGVudGlhbHMsIHJlcSkge1xyXG4vLyAgICAgICAgIC8vIEFkZCBsb2dpYyBoZXJlIHRvIGxvb2sgdXAgdGhlIHVzZXIgZnJvbSB0aGUgY3JlZGVudGlhbHMgc3VwcGxpZWRcclxuXHJcbi8vICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXV0aC9sb2dpblwiLCB7XHJcbi8vICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgICAgICAgICAgaGVhZGVyczoge1xyXG4vLyAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuLy8gICAgICAgICAgIH0sXHJcbi8vICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbi8vICAgICAgICAgICAgIHVzZXJuYW1lOiBjcmVkZW50aWFscz8udXNlcm5hbWUsXHJcbi8vICAgICAgICAgICAgIHBhc3N3b3JkOiBjcmVkZW50aWFscz8ucGFzc3dvcmQsXHJcbi8vICAgICAgICAgICB9KSxcclxuLy8gICAgICAgICB9KTtcclxuLy8gICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbi8vICAgICAgICAgaWYgKHVzZXIpIHtcclxuLy8gICAgICAgICAgIC8vIEFueSBvYmplY3QgcmV0dXJuZWQgd2lsbCBiZSBzYXZlZCBpbiBgdXNlcmAgcHJvcGVydHkgb2YgdGhlIEpXVFxyXG4vLyAgICAgICAgICAgcmV0dXJuIHVzZXI7XHJcbi8vICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgIC8vIElmIHlvdSByZXR1cm4gbnVsbCB0aGVuIGFuIGVycm9yIHdpbGwgYmUgZGlzcGxheWVkIGFkdmlzaW5nIHRoZSB1c2VyIHRvIGNoZWNrIHRoZWlyIGRldGFpbHMuXHJcbi8vICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHJcbi8vICAgICAgICAgICAvLyBZb3UgY2FuIGFsc28gUmVqZWN0IHRoaXMgY2FsbGJhY2sgd2l0aCBhbiBFcnJvciB0aHVzIHRoZSB1c2VyIHdpbGwgYmUgc2VudCB0byB0aGUgZXJyb3IgcGFnZSB3aXRoIHRoZSBlcnJvciBtZXNzYWdlIGFzIGEgcXVlcnkgcGFyYW1ldGVyXHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICB9LFxyXG4vLyAgICAgfSksXHJcbi8vICAgXSxcclxuXHJcblxyXG4gIFxyXG4vLyAgICAgICAgIC8vIHNlc3Npb246e1xyXG4vLyAgICAgICAgIC8vICAgICBzdHJhdGVneTpcImp3dFwiXHJcbi8vICAgICAgICAgLy8gfSxcclxuLy8gICAgIGNhbGxiYWNrczoge1xyXG4vLyAgICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xyXG4vLyAgICAgICByZXR1cm4geyAuLi50b2tlbiwgLi4udXNlciB9O1xyXG4vLyAgICAgfSxcclxuICAgIFxyXG4vLyAgICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuLCB1c2VyIH0pIHtcclxuLy8gICAgICAgc2Vzc2lvbi51c2VyID0gdG9rZW4gYXMgYW55O1xyXG4vLyAgICAgICByZXR1cm4gc2Vzc2lvbjtcclxuLy8gICAgIH0sXHJcbi8vICAgfSxcclxuLy8gICBwYWdlczp7XHJcbi8vICAgICBzaWduSW46XCIvTG9naW5cIlxyXG4vLyB9XHJcbi8vIH0pO1xyXG5cclxuIl0sIm5hbWVzIjpbIkNyZWRlbnRpYWxzUHJvdmlkZXIiLCJOZXh0QXV0aCIsImF1dGhPcHRpb25zIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIkFVVEhfU0VDUkVUIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwbGFjZWhvbGRlciIsInBhc3N3b3JkIiwiYXV0aG9yaXplIiwicmVxIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1c2VyIiwianNvbiIsIm9rIiwiY2FsbGJhY2tzIiwiand0IiwidG9rZW4iLCJzZXNzaW9uIiwicGFnZXMiLCJzaWduSW4iLCJzaWduT3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/[...nextauth].ts"));
module.exports = __webpack_exports__;

})();